from gremlin_python.process.traversal import TraversalStrategy as TraversalStrategy
from typing import Any, Optional

class ConnectiveStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class ElementIdStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class HaltedTraverserStrategy(TraversalStrategy):
    def __init__(self, halted_traverser_factory: Optional[Any] = ...) -> None: ...

class OptionsStrategy(TraversalStrategy):
    def __init__(self, options: Optional[Any] = ...) -> None: ...

class PartitionStrategy(TraversalStrategy):
    def __init__(self, partition_key: Optional[Any] = ..., write_partition: Optional[Any] = ..., read_partitions: Optional[Any] = ..., include_meta_properties: Optional[Any] = ...) -> None: ...

class SubgraphStrategy(TraversalStrategy):
    def __init__(self, vertices: Optional[Any] = ..., edges: Optional[Any] = ..., vertex_properties: Optional[Any] = ...) -> None: ...

class VertexProgramStrategy(TraversalStrategy):
    def __init__(self, graph_computer: Optional[Any] = ..., workers: Optional[Any] = ..., persist: Optional[Any] = ..., result: Optional[Any] = ..., vertices: Optional[Any] = ..., edges: Optional[Any] = ..., configuration: Optional[Any] = ...) -> None: ...

class MatchAlgorithmStrategy(TraversalStrategy):
    def __init__(self, match_algorithm: Optional[Any] = ...) -> None: ...

class AdjacentToIncidentStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class FilterRankingStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class IdentityRemovalStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class IncidentToAdjacentStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class InlineFilterStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class LazyBarrierStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class MatchPredicateStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class OrderLimitStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class PathProcessorStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class PathRetractionStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class CountStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class RepeatUnrollStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class GraphFilterStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class EarlyLimitStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class LambdaRestrictionStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class ReadOnlyStrategy(TraversalStrategy):
    def __init__(self) -> None: ...

class EdgeLabelVerificationStrategy(TraversalStrategy):
    def __init__(self, log_warning: bool = ..., throw_exception: bool = ...) -> None: ...

class ReservedKeysVerificationStrategy(TraversalStrategy):
    def __init__(self, log_warning: bool = ..., throw_exception: bool = ..., keys: Any = ...) -> None: ...
