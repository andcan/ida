import abc
from gremlin_python.driver import request as request, serializer as serializer
from gremlin_python.driver.resultset import ResultSet as ResultSet
from typing import Any

class GremlinServerError(Exception):
    status_code: Any = ...
    def __init__(self, status: Any) -> None: ...
    @property
    def status_attributes(self): ...

class AbstractBaseProtocol(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def connection_made(self, transport: Any) -> Any: ...
    @abc.abstractmethod
    def data_received(self, message: Any) -> Any: ...
    @abc.abstractmethod
    def write(self, request_id: Any, request_message: Any) -> Any: ...

class GremlinServerWSProtocol(AbstractBaseProtocol):
    def __init__(self, message_serializer: Any, username: str = ..., password: str = ...) -> None: ...
    def connection_made(self, transport: Any) -> None: ...
    def write(self, request_id: Any, request_message: Any) -> None: ...
    def data_received(self, message: Any, results_dict: Any): ...
