from concurrent.futures import Future
from typing import Any, Sequence


class ResultSet:
    def __init__(self, stream: Any, request_id: Any) -> None: ...

    @property
    def aggregate_to(self): ...

    @aggregate_to.setter
    def aggregate_to(self, val: Any) -> None: ...

    @property
    def status_attributes(self): ...

    @status_attributes.setter
    def status_attributes(self, val: Any) -> None: ...

    @property
    def request_id(self): ...

    @property
    def stream(self): ...

    def __iter__(self) -> Any: ...

    def __next__(self): ...

    def next(self): ...

    @property
    def done(self): ...

    @done.setter
    def done(self, future: Any) -> None: ...

    def one(self) -> Future: ...

    def all(self) -> Future[Sequence]: ...
