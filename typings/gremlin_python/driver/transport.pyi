import abc
from typing import Any, Optional

class AbstractBaseTransport(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def connect(self, url: Any, headers: Optional[Any] = ...) -> Any: ...
    @abc.abstractmethod
    def write(self, message: Any) -> Any: ...
    @abc.abstractmethod
    def read(self) -> Any: ...
    @abc.abstractmethod
    def close(self) -> Any: ...
    @property
    @abc.abstractmethod
    def closed(self) -> Any: ...
