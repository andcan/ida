"""
This type stub file was generated by pyright.
"""

def identity(x):
    """Returns its argument."""
    ...

def constantly(x):
    """Creates a function accepting any args, but always returning x."""
    ...

def caller(*a, **kw):
    """Creates a function calling its sole argument with given *a, **kw."""
    ...

def func_partial(func, *args, **kwargs):
    """A functools.partial alternative, which returns a real function.
       Can be used to construct methods."""
    ...

def rpartial(func, *args, **kwargs):
    """Partially applies last arguments.
       New keyworded arguments extend and override kwargs."""
    ...

def curry(func, n=...):
    """Curries func into a chain of one argument functions."""
    ...

def rcurry(func, n=...):
    """Curries func into a chain of one argument functions.
       Arguments are passed from right to left."""
    ...

def autocurry(func, n=..., _spec=..., _args=..., _kwargs=...):
    """Creates a version of func returning its partial applications
       until sufficient arguments are passed."""
    ...

def iffy(pred, action=..., default=...):
    """Creates a function, which conditionally applies action or default."""
    ...

def compose(*fs):
    """Composes passed functions."""
    ...

def rcompose(*fs):
    """Composes functions, calling them from left to right."""
    ...

def complement(pred):
    """Constructs a complementary predicate."""
    ...

def ljuxt(*fs):
    """Constructs a juxtaposition of the given functions.
       Result returns a list of results of fs."""
    ...

def juxt(*fs):
    """Constructs a lazy juxtaposition of the given functions.
       Result returns an iterator of results of fs."""
    ...

