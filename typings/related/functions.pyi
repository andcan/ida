"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict


@singledispatch
def to_dict(obj: Any, **kwargs: Any) -> Dict[str, Any]:
    """
    Convert an object into dictionary. Uses singledispatch to allow for
    clean extensions for custom class types.

    Reference: https://pypi.python.org/pypi/singledispatch

    :param obj: object instance
    :param kwargs: keyword arguments such as suppress_private_attr,
                   suppress_empty_values, dict_factory
    :return: converted dictionary.
    """
    ...


def related_obj_to_dict(obj, **kwargs):
    """ Covert a known related object to a dictionary. """
    ...


def to_model(cls: Any, value: Any) -> Any:
    """
    Coerce a value into a model object based on a class-type (cls).
    :param cls: class type to coerce into
    :param value: value to be coerced
    :return: original value or coerced value (value')
    """
    ...


def convert_key_to_attr_names(cls, original):
    """ convert key names to their corresponding attribute names """
    ...


def is_model(cls):
    """
    Check whether *cls* is a class with ``attrs`` attributes.

    :param type cls: Class to introspect.
    :raise TypeError: If *cls* is not a class.

    :rtype: :class:`bool`
    """
    ...


def to_yaml(obj: Any, stream: Any = ..., dumper_cls: Any = ..., default_flow_style: Any = ..., **kwargs: Any) -> str:
    """
    Serialize a Python object into a YAML stream with OrderedDict and
    default_flow_style defaulted to False.

    If stream is None, return the produced string instead.

    OrderedDict reference: http://stackoverflow.com/a/21912744
    default_flow_style reference: http://stackoverflow.com/a/18210750

    :param data: python object to be serialized
    :param stream: to be serialized to
    :param Dumper: base Dumper class to extend.
    :param kwargs: arguments to pass to to_dict
    :return: stream if provided, string if stream is None
    """
    class OrderedDumper(dumper_cls):
        ...


def from_yaml(stream, cls=..., loader_cls=..., object_pairs_hook=..., **extras):
    """
    Convert a YAML stream into a class via the OrderedLoader class.
    """
    class OrderedLoader(loader_cls):
        ...


def to_json(obj, indent=..., sort_keys=..., **kwargs):
    """
    :param obj: object to convert to dictionary and then output to json
    :param indent: indent json by number of spaces
    :param sort_keys: sort json output by key if true
    :param kwargs: arguments to pass to to_dict
    :return: json string
    """
    ...


def from_json(stream, cls=..., object_pairs_hook=..., **extras):
    """
    Convert a JSON string or stream into specified class.
    """
    ...
