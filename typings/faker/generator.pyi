"""
This type stub file was generated by pyright.
"""

import random as random_module
import re

_re_token = re.compile(r'\{\{(\s?)(\w+)(\s?)\}\}')
random = random_module.Random()
mod_random = random
class Generator(object):
    __config = ...
    def __init__(self, **config) -> None:
        ...
    
    def add_provider(self, provider):
        ...
    
    def provider(self, name):
        ...
    
    def get_providers(self):
        """Returns added providers."""
        ...
    
    @property
    def random(self):
        ...
    
    @random.setter
    def random(self, value):
        ...
    
    def seed_instance(self, seed=...):
        """Calls random.seed"""
        ...
    
    @classmethod
    def seed(cls, seed=...):
        ...
    
    def format(self, formatter, *args, **kwargs):
        """
        This is a secure way to make a fake from another Provider.
        """
        ...
    
    def get_formatter(self, formatter):
        ...
    
    def set_formatter(self, name, method):
        """
        This method adds a provider method to generator.
        Override this method to add some decoration or logging stuff.
        """
        ...
    
    def parse(self, text):
        """
        Replaces tokens (like '{{ tokenName }}' or '{{tokenName}}')
        with the result from the token method call.
        """
        ...
    


